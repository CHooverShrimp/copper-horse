---
import Layout from '@layouts/Layout.astro';

// Get the slug from the URL
const { slug } = Astro.params;

// Fetch the data on each request (SSR)
const response = await fetch('https://opensheet.elk.sh/1HQtbx_W_TRkViZCQcqflwximoPfXE-XQF9-YMWMAd14/Sheet1');
// Define the expected type for a box
type Box = {
  Active: string;
  Item: string;
  Thumbnail?: string;
  Desc?: string;
  Price?: string;
  // Add other fields as needed
};

const boxes = (await response.json()) as Box[];

// Find the box that matches the slug
const box = boxes.find(box =>
  box.Active === "TRUE" &&
  box.Item.toLowerCase()
    .replace(/\s+/g, '')
    .replace(/[^a-z0-9]/gi, '') === slug
);

// If no box found, return 404
if (!box) {
  return Astro.redirect('/404');
}
---

<Layout>
  <div class="item-detail-container min-h-screen p-[2rem]">
    <div class="item-detail">
      {box.Thumbnail && (
        <div class="image-container">
          <img
            src={box.Thumbnail}
            alt={box.Item}
            class="detail-image"
          />
        </div>
      )}

      <div class="detail-content">
        <h1 class="item-title">{box.Item}</h1>

        {box.Desc && (
          <div class="description-section">
            <h2>Description</h2>
            <p class="description">{box.Desc}</p>
          </div>
        )}

        {box.Price && (
          <div class="price-section">
            <div class="price">{box.Price}</div>
          </div>
        )}

        <div class="actions">
          <a href="/" class="back-button">‚Üê Back to Catalog</a>
          <button class="contact-button">Contact for Purchase</button>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>


  .item-detail {
    max-width: 1000px;
    margin: 0 auto;
    background: white;
    border-radius: 16px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0;
  }

  .image-container {
    background: #f3f4f6;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 400px;
  }

  .detail-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .detail-content {
    padding: 3rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .item-title {
    font-size: 2.5rem;
    font-weight: 700;
    color: #1f2937;
    margin: 0 0 2rem 0;
    line-height: 1.2;
  }

  .description-section {
    margin-bottom: 2rem;
  }

  .description-section h2 {
    font-size: 1.25rem;
    font-weight: 600;
    color: #374151;
    margin: 0 0 1rem 0;
  }

  .description {
    color: #6b7280;
    font-size: 1rem;
    line-height: 1.6;
    margin: 0;
  }

  .price-section {
    margin-bottom: 2rem;
  }

  .price {
    font-size: 1.5rem;
    font-weight: 700;
    color: #059669;
    background: #ecfdf5;
    padding: 1rem 1.5rem;
    border-radius: 8px;
    display: inline-block;
  }

  .actions {
    display: flex;
    gap: 1rem;
    align-items: center;
    flex-wrap: wrap;
  }

  .back-button {
    color: #6b7280;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease;
  }

  .back-button:hover {
    color: #374151;
  }

  .contact-button {
    background: #3b82f6;
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.2s ease;
  }

  .contact-button:hover {
    background: #2563eb;
  }

  /* Mobile responsive */
  @media (max-width: 768px) {
    .item-detail {
      grid-template-columns: 1fr;
      margin: 1rem;
    }

    .detail-content {
      padding: 2rem;
    }

    .item-title {
      font-size: 2rem;
    }

    .actions {
      flex-direction: column;
      align-items: stretch;
    }

    .contact-button {
      width: 100%;
      text-align: center;
    }
  }

  /* Handle cases without thumbnail */
  .item-detail:not(:has(.image-container)) {
    grid-template-columns: 1fr;
    max-width: 600px;
  }

  .item-detail:not(:has(.image-container)) .detail-content {
    padding: 4rem 3rem;
    text-align: center;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
  }

  .item-detail:not(:has(.image-container)) .item-title {
    color: white;
  }

  .item-detail:not(:has(.image-container)) .description-section h2 {
    color: #e5e7eb;
  }

  .item-detail:not(:has(.image-container)) .description {
    color: #e5e7eb;
  }

  .item-detail:not(:has(.image-container)) .price {
    background: rgba(255, 255, 255, 0.2);
    color: white;
  }
</style>