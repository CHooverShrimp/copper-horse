---
export const prerender = false;

import Layout from '@layouts/Layout.astro';
import BoxComponent from '@components/BoxComponent.astro';

type Box = {
	Active: string;
	[key: string]: any;
};

const response = await fetch('https://opensheet.elk.sh/1HQtbx_W_TRkViZCQcqflwximoPfXE-XQF9-YMWMAd14/Sheet1');
const boxes: Box[] = await response.json();

// Filter only active items
const activeBoxes = boxes.filter((box: Box) => box.Active === "TRUE");
---

<Layout>
	<div id="filter" class="flex justify-center gap-4 py-4">
		<input type="checkbox" name="toggleDisplayOnly" id="toggleDisplayOnly-toggle" class="hidden peer">
		<label for="toggleDisplayOnly-toggle" class="cursor-pointer p-2 text-white bg-lime-900 rounded peer-checked:bg-lime-950 hover:scale-105 transition duration-100">Display Only</label>
	</div>
	<div class="grid grid-container">
		{activeBoxes.map(box => (
			<BoxComponent Item={box.Item} {...box} />
		))}
	</div>
</Layout>

<style>
	.grid-container {
		grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		gap: 2rem;
		padding: 2rem;
		max-width: 1200px;
		margin: 0 auto;
	}

	@media (max-width: 768px) {
		.grid-container {
			grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
			gap: 1rem;
			padding: 1rem;
		}
	}
</style>


<script>
  const checkbox = document.getElementById("toggleDisplayOnly-toggle") as HTMLInputElement;
  console.log("HELLO");

  checkbox.addEventListener("change", () => {
    console.log("TICKING");
    const isChecked = checkbox.checked;

    // Debug: log what we're finding
    const notForSaleElements = document.querySelectorAll(".NotForSale");
    console.log("Found NotForSale elements:", notForSaleElements.length);

    // show/hide NotForSale items based on checkbox state
    notForSaleElements.forEach((link, index) => {
      console.log(`Element ${index}:`, link.className);

      if (isChecked) {
        // Force hide with display none
        (link as HTMLElement).style.display = "none";
        console.log(`Hiding element ${index}`);
      } else {
        // Show by removing the inline style
        (link as HTMLElement).style.display = "";
        console.log(`Showing element ${index}`);
      }
    });
  });
</script>